[34m[1mtrain: [39m[22mScanning C:\Users\ssel512\PycharmProjects\datasets\coco128\labels\train2017.cache... 126 images, 2 backgrounds, 0 corrupt: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 128/128 [00:00<?, ?it/s]
[34m[1mval: [39m[22mScanning C:\Users\ssel512\PycharmProjects\datasets\coco128\labels\train2017.cache... 126 images, 2 backgrounds, 0 corrupt: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 128/128 [00:00<?, ?it/s]
  0%|          | 0/8 [00:00<?, ?it/s]D:\anaconda3\envs\torchGpu\lib\site-packages\torch\autocast_mode.py:141: UserWarning: User provided device_type of 'cuda', but CUDA is not available. Disabling
  warnings.warn('User provided device_type of \'cuda\', but CUDA is not available. Disabling')
Freezing layer 'model.22.dfl.conv.weight'
[34m[1malbumentations: [39m[22mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01), CLAHE(p=0.01, clip_limit=(1, 4.0), tile_grid_size=(8, 8))
Plotting labels to C:\Users\ssel512\PycharmProjects\ultralytics\runs\detect\train66\labels.jpg...
[34m[1moptimizer:[39m[22m 'optimizer=auto' found, ignoring 'lr0=0.01' and 'momentum=0.937' and determining best 'optimizer', 'lr0' and 'momentum' automatically...
[34m[1moptimizer:[39m[22m AdamW(lr=0.000119, momentum=0.9) with parameter groups 57 weight(decay=0.0), 64 weight(decay=0.0005), 63 bias(decay=0.0)
Image sizes 640 train, 640 val
Using 0 dataloader workers
Logging results to [1mC:\Users\ssel512\PycharmProjects\ultralytics\runs\detect\train66
Starting training for 3 epochs...
      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size






        1/3         0G      1.166      1.461      1.243        294        640: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 8/8 [00:38<00:00,  4.77s/it]
                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95):   0%|          | 0/4 [00:02<?, ?it/s]
Traceback (most recent call last):
  File "C:/Users/ssel512/PycharmProjects/YOLO_test/main.py", line 15, in <module>
    train()
  File "C:/Users/ssel512/PycharmProjects/YOLO_test/main.py", line 9, in train
    model.train(data="coco128.yaml", epochs=3)  # train the model
  File "D:\anaconda3\envs\torchGpu\lib\site-packages\ultralytics\engine\model.py", line 338, in train
    self.trainer.train()
  File "D:\anaconda3\envs\torchGpu\lib\site-packages\ultralytics\engine\trainer.py", line 190, in train
    self._do_train(world_size)
  File "D:\anaconda3\envs\torchGpu\lib\site-packages\ultralytics\engine\trainer.py", line 379, in _do_train
    self.metrics, self.fitness = self.validate()
  File "D:\anaconda3\envs\torchGpu\lib\site-packages\ultralytics\engine\trainer.py", line 483, in validate
    metrics = self.validator(self)
  File "D:\anaconda3\envs\torchGpu\lib\site-packages\torch\autograd\grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "D:\anaconda3\envs\torchGpu\lib\site-packages\ultralytics\engine\validator.py", line 178, in __call__
    preds = self.postprocess(preds)
  File "D:\anaconda3\envs\torchGpu\lib\site-packages\ultralytics\models\yolo\detect\val.py", line 81, in postprocess
    return ops.non_max_suppression(preds,
  File "D:\anaconda3\envs\torchGpu\lib\site-packages\ultralytics\utils\ops.py", line 238, in non_max_suppression
    i = torchvision.ops.nms(boxes, scores, iou_thres)  # NMS
  File "D:\anaconda3\envs\torchGpu\lib\site-packages\torchvision\ops\boxes.py", line 34, in nms
    _assert_has_ops()
  File "D:\anaconda3\envs\torchGpu\lib\site-packages\torchvision\extension.py", line 31, in _assert_has_ops
    raise RuntimeError(
RuntimeError: Couldn't load custom C++ ops. This can happen if your PyTorch and torchvision versions are incompatible, or if you had errors while compiling torchvision from source. For further information on the compatible versions, check https://github.com/pytorch/vision#installation for the compatibility matrix. Please check your PyTorch version with torch.__version__ and your torchvision version with torchvision.__version__ and verify if they are compatible, and if not please reinstall torchvision so that it matches your PyTorch install.